name: Provision Tenant Supabase Project

on:
  workflow_dispatch:
    inputs:
      tenant_id:
        description: Tenant UUID
        required: true
      subdomain:
        description: Subdomain
        required: true
      display_name:
        description: Display name
        required: true
      region:
        description: Supabase region
        required: true
        default: us-east-1

jobs:
  provision:
    runs-on: ubuntu-latest
    environment: SERVER
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || 'main' }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt requests

      - name: Debug script excerpt
        run: |
          echo 'Showing script lines 42-60 to verify db_pass payload:'
          sed -n '42,60p' scripts/provision_tenant.py

      - name: Provision project and store creds
        id: provision
        env:
          SUPABASE_PAT: ${{ secrets.SUPABASE_PAT }}
          SUPABASE_ORG_ID: ${{ secrets.SUPABASE_ORG_ID }}
          CONTROL_PLANE_API_URL: ${{ secrets.CONTROL_PLANE_API_URL }}
          DEFAULT_TENANT_DB_PASSWORD: ${{ secrets.DEFAULT_TENANT_DB_PASSWORD }}
        run: |
          python scripts/provision_tenant.py \
            --tenant-id '${{ github.event.inputs.tenant_id }}' \
            --subdomain '${{ github.event.inputs.subdomain }}' \
            --display-name '${{ github.event.inputs.display_name }}' \
            --region '${{ github.event.inputs.region }}'

      - name: Install Supabase CLI
        run: |
          set -e
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then ARCH=amd64; fi
          VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | grep tag_name | cut -d '"' -f4)
          URL="https://github.com/supabase/cli/releases/download/${VERSION}/supabase_${VERSION#v}_linux_${ARCH}.deb"
          curl -fsSL -o supabase.deb "$URL"
          sudo dpkg -i supabase.deb
          supabase --version

      - name: Run school schema migrations via Supabase CLI
        env:
          REGION: ${{ github.event.inputs.region }}
          PROJECT_REF: ${{ steps.provision.outputs.project_ref }}
          DB_PASS: ${{ secrets.DEFAULT_TENANT_DB_PASSWORD }}
        run: |
          echo "Applying SQL to tenant DB via Supabase CLI"
          HOST="aws-0-$REGION.pooler.supabase.com"
          ENCODED_OPTS="project%3D$PROJECT_REF"
          DB_URL="postgres://postgres:${DB_PASS}@${HOST}:5432/postgres?sslmode=require&options=${ENCODED_OPTS}"
          echo "DB_URL host=$HOST project=$PROJECT_REF"
          supabase db execute --file app/prisma/tenant_schema.sql --db-url "$DB_URL"


